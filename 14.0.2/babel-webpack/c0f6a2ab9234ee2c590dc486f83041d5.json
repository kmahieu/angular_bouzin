{"ast":null,"code":"import _asyncToGenerator from \"/root/bouzin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, lastValueFrom, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/auth/services/tokens.service\";\nexport class OfferService {\n  constructor(http, ts) {\n    this.http = http;\n    this.ts = ts;\n    this.API_URL = 'https://api.emploi-store.fr/partenaire/offresdemploi/v2/offres/search?range=2-10';\n    this.observableOffers = new BehaviorSubject([{\n      designation: \"Dev front\",\n      isBlacklisted: false\n    }, {\n      designation: \"Dev back\",\n      isBlacklisted: false\n    }, {\n      designation: \"Full stack\",\n      isBlacklisted: false\n    }]);\n  }\n\n  getObservableOffers() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const tkn = yield _this.ts.getToken();\n      console.log(tkn);\n      return lastValueFrom(_this.http.get(_this.API_URL, {\n        headers: new HttpHeaders({\n          'Authorization': 'Bearer ' + tkn\n        })\n      }).pipe(map(data => {\n        let list = [];\n        data.resultats.forEach(e => {\n          list.push({\n            designation: e.intitule\n          });\n        });\n        return list;\n      })));\n    })();\n  }\n\n  getSubjectOffers() {\n    return this.observableOffers;\n  }\n\n  addOffer(offer) {\n    this.observableOffers.getValue().push(offer);\n    this.getSubjectOffers().next(this.observableOffers.getValue());\n  }\n\n  updateOffers(offers) {\n    this.getSubjectOffers().next(offers);\n  }\n\n}\n\nOfferService.ɵfac = function OfferService_Factory(t) {\n  return new (t || OfferService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokensService));\n};\n\nOfferService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OfferService,\n  factory: OfferService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAqBA,WAArB,QAAwC,sBAAxC;AAEA,SAASC,eAAT,EAA0CC,aAA1C,EAAyDC,GAAzD,QAAsG,MAAtG;;;;AAUA,OAAM,MAAOC,YAAP,CAAmB;EAWvBC,YACUC,IADV,EAEUC,EAFV,EAE2B;IADjB;IACA;IAXF,eAAU,kFAAV;IAEA,wBAAmB,IAAIN,eAAJ,CAA6B,CACtD;MAACO,WAAW,EAAG,WAAf;MAA2BC,aAAa,EAAG;IAA3C,CADsD,EAEtD;MAACD,WAAW,EAAG,UAAf;MAA0BC,aAAa,EAAG;IAA1C,CAFsD,EAGtD;MAACD,WAAW,EAAG,YAAf;MAA4BC,aAAa,EAAG;IAA5C,CAHsD,CAA7B,CAAnB;EAUH;;EAEEC,mBAAmB;IAAA;;IAAA;MAExB,MAAMC,GAAG,SAAS,KAAI,CAACJ,EAAL,CAAQK,QAAR,EAAlB;MAEAC,OAAO,CAACC,GAAR,CAAYH,GAAZ;MAGA,OAAOT,aAAa,CAAC,KAAI,CAACI,IAAL,CAAUS,GAAV,CAAuB,KAAI,CAACC,OAA5B,EAAsC;QACzDC,OAAO,EAAG,IAAIjB,WAAJ,CAAgB;UACxB,iBAAkB,YAAYW;QADN,CAAhB;MAD+C,CAAtC,EAKlBO,IALkB,CAMjBf,GAAG,CAAGgB,IAAD,IAAc;QACjB,IAAIC,IAAI,GAAG,EAAX;QACAD,IAAI,CAACE,SAAL,CAAeC,OAAf,CAAwBC,CAAD,IAAW;UAChCH,IAAI,CAACI,IAAL,CAAU;YACRhB,WAAW,EAAGe,CAAC,CAACE;UADR,CAAV;QAGD,CAJD;QAKA,OAAOL,IAAP;MACD,CARE,CANc,CAAD,CAApB;IAPwB;EAwBzB;;EAGDM,gBAAgB;IACd,OAAO,KAAKC,gBAAZ;EACD;;EAEDC,QAAQ,CAACC,KAAD,EAAa;IACnB,KAAKF,gBAAL,CAAsBG,QAAtB,GAAiCN,IAAjC,CAAsCK,KAAtC;IACA,KAAKH,gBAAL,GAAwBK,IAAxB,CAA6B,KAAKJ,gBAAL,CAAsBG,QAAtB,EAA7B;EACD;;EAEDE,YAAY,CAACC,MAAD,EAAgB;IAC1B,KAAKP,gBAAL,GAAwBK,IAAxB,CAA6BE,MAA7B;EACD;;AAtDsB;;;mBAAZ7B,cAAY8B;AAAA;;;SAAZ9B;EAAY+B,SAAZ/B,YAAY;EAAAgC,YAFX","names":["HttpHeaders","BehaviorSubject","lastValueFrom","map","OfferService","constructor","http","ts","designation","isBlacklisted","getObservableOffers","tkn","getToken","console","log","get","API_URL","headers","pipe","data","list","resultats","forEach","e","push","intitule","getSubjectOffers","observableOffers","addOffer","offer","getValue","next","updateOffers","offers","i0","factory","providedIn"],"sourceRoot":"","sources":["/root/bouzin/src/app/buisness/offer/services/offer.service.ts"],"sourcesContent":["\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { BehaviorSubject, firstValueFrom, lastValueFrom, map, merge, Observable, Subject, take } from 'rxjs';\nimport { TokensService } from 'src/app/auth/services/tokens.service';\nimport { Offer } from '../models/offer';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfferService {\n\n  private API_URL = 'https://api.emploi-store.fr/partenaire/offresdemploi/v2/offres/search?range=2-10';\n\n  private observableOffers = new BehaviorSubject<Offer[]>([\n    {designation : \"Dev front\",isBlacklisted : false},\n    {designation : \"Dev back\",isBlacklisted : false},\n    {designation : \"Full stack\",isBlacklisted : false}\n  ]);\n\n\n  constructor(\n    private http: HttpClient,\n    private ts: TokensService\n  ) { }\n\n   async getObservableOffers(): Promise<Offer[]>{\n\n    const tkn = await this.ts.getToken();\n\n    console.log(tkn);\n\n\n    return lastValueFrom(this.http.get<Offer[]>(this.API_URL , {\n      headers : new HttpHeaders({\n        'Authorization' : 'Bearer ' + tkn\n      })\n    })\n      .pipe(\n        map( (data: any) => {\n          let list = [] as Offer[];\n          data.resultats.forEach((e: any) => {\n            list.push({\n              designation : e.intitule\n            } as Offer)\n          })\n          return list as Offer[];\n        })\n      ))\n    ;\n  }\n\n\n  getSubjectOffers(): Subject<Offer[]>{\n    return this.observableOffers;\n  }\n\n  addOffer(offer: Offer): void {\n    this.observableOffers.getValue().push(offer);\n    this.getSubjectOffers().next(this.observableOffers.getValue());\n  }\n\n  updateOffers(offers: Offer[]): void {\n    this.getSubjectOffers().next(offers)\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}